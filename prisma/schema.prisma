generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model perfiles {
  id_perfil          Int        @id @default(autoincrement())
  descripcion        String     @db.VarChar(1024)
  estado_auditoria   String     @default(dbgenerated("1")) @db.Char(1)
  fecha_creacion     DateTime   @default(now()) @db.Timestamp(6)
  fecha_modificacion DateTime?  @db.Timestamp(6)
  usuarios           usuarios[]
}

model productos {
  id_producto         Int              @id @default(autoincrement())
  id_categoria        Int
  id_usuario          Int
  nombre              String           @db.VarChar(150)
  descripcion         String?          @db.VarChar(1024)
  precio              Decimal          @db.Decimal(10, 2)
  stock               Int
  imagen              String?          @db.VarChar(1024)
  estado_auditoria    String           @default(dbgenerated("1")) @db.Char(1)
  fecha_creacion      DateTime         @default(now()) @db.Timestamp(6)
  fecha_modificacion  DateTime?        @db.Timestamp(6)
  comentarios         comentarios[]
  detalle_compra      detalle_compra[]
  categorias_producto categorias       @relation(fields: [id_categoria], references: [id_categoria], onDelete: NoAction, onUpdate: NoAction, map: "fk_producto_categoria")
  usuarios            usuarios         @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_producto_usuario")
}

model usuarios {
  id_usuario         Int           @id @default(autoincrement())
  id_perfil          Int
  nombres            String        @db.VarChar(150)
  apellido_paterno   String        @db.VarChar(150)
  apellido_materno   String        @db.VarChar(150)
  nombre_usuario     String        @db.VarChar(150)
  celular            String        @db.Char(9)
  email              String        @db.VarChar(1024)
  password           String        @db.VarChar(1024)
  estado_auditoria   String        @default(dbgenerated("1")) @db.Char(1)
  fecha_creacion     DateTime      @default(now()) @db.Timestamp(6)
  fecha_modificacion DateTime?     @db.Timestamp(6)
  bitacora           bitacora[]
  comentarios        comentarios[]
  compras            compras[]
  productos          productos[]
  perfiles           perfiles      @relation(fields: [id_perfil], references: [id_perfil], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuario_perfil")
}

model comentarios {
  id_comentario      Int       @id @default(autoincrement())
  id_usuario         Int
  id_producto        Int
  comentario         String    @db.VarChar(1024)
  calificacion       Int?
  estado_auditoria   String    @default(dbgenerated("1")) @db.Char(1)
  fecha_creacion     DateTime  @default(now()) @db.Timestamp(6)
  fecha_modificacion DateTime? @db.Timestamp(6)
  productos          productos @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction, map: "fk_comentario_producto")
  usuarios           usuarios  @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_comentario_usuario")
}

model compras {
  id_compra          Int              @id @default(autoincrement())
  id_usuario         Int
  id_estado          Int
  metodo_pago        String           @db.VarChar(100)
  total              Decimal          @db.Decimal(10, 2)
  estado_auditoria   String           @default(dbgenerated("1")) @db.Char(1)
  fecha_creacion     DateTime         @default(now()) @db.Timestamp(6)
  fecha_modificacion DateTime?        @db.Timestamp(6)
  numero_tarjeta     String?          @db.VarChar(16)
  estados_compra     estados_compra   @relation(fields: [id_estado], references: [id_estado], onDelete: NoAction, onUpdate: NoAction, map: "fk_compra_estado")
  usuarios           usuarios         @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_compra_usuario")
  detalle_compra     detalle_compra[]
}

model detalle_compra {
  id_detalle           Int       @id @default(autoincrement())
  id_compra            Int
  id_producto          Int
  cantidad             Int
  precio               Decimal   @db.Decimal(10, 2)
  descuento            Decimal   @db.Decimal(10, 2)
  impuesto             Decimal   @db.Decimal(10, 2)
  departamento_entrega String    @db.VarChar(1024)
  distrito_entrega     String    @db.VarChar(1024)
  direccion_entrega    String    @db.VarChar(1024)
  estado_auditoria     String    @default(dbgenerated("1")) @db.Char(1)
  fecha_creacion       DateTime? @default(now()) @db.Timestamp(6)
  compras              compras   @relation(fields: [id_compra], references: [id_compra], onDelete: NoAction, onUpdate: NoAction, map: "fk_detallecompra_compra")
  productos            productos @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction, map: "fk_detallecompra_producto")
}

model estados_compra {
  id_estado          Int       @id @default(autoincrement())
  descripcion        String    @db.VarChar(250)
  estado_auditoria   String    @default(dbgenerated("1")) @db.Char(1)
  fecha_creacion     DateTime  @default(now()) @db.Timestamp(6)
  fecha_modificacion DateTime? @db.Timestamp(6)
  compras            compras[]
}

model bitacora {
  id_bitacora        Int       @id(map: "historial_pkey") @default(autoincrement())
  id_usuario         Int
  accion             String    @db.Char(100)
  fecha_accion       DateTime  @db.Timestamptz(6)
  estado_auditoria   String    @default(dbgenerated("1")) @db.Char(1)
  fecha_creacion     DateTime  @default(now()) @db.Timestamp(6)
  fecha_modificacion DateTime? @db.Timestamp(6)
  usuarios           usuarios  @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_historial_usuario")
}

model categorias {
  id_categoria       Int         @id(map: "categorias_productos_pkey") @default(autoincrement())
  nombre             String      @db.VarChar(1024)
  estado_auditoria   String      @default(dbgenerated("1")) @db.Char(1)
  fecha_creacion     DateTime    @default(now()) @db.Timestamp(6)
  fecha_modificacion DateTime?   @db.Timestamp(6)
  productos          productos[]
}
